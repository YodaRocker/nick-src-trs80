	COM	'<small c compiler output>'
*MOD
_ALIGN:
	DEBUG	'align'
	RET
__BOTTOM:
	DC	2,0
__TOP:
	DC	2,0
__EMPTY:
	DC	2,0
_GROW:
	DEBUG	'grow'
	PUSH	BC
	LD	HL,0
	ADD	HL,SP
	PUSH	HL
	LD	HL,(__TOP)
	PUSH	HL
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	ADD	HL,DE
	PUSH	HL
	LD	HL,1024
	PUSH	HL
	CALL	_ALIGN
	POP	BC
	POP	BC
	POP	DE
	CALL	CCPINT
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,(__TOP)
	POP	DE
	CALL	CCULT
	LD	A,H
	OR	L
	JP	NZ,$?4
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_BRK
	POP	BC
	PUSH	HL
	LD	HL,0
	POP	DE
	CALL	CCNE
	LD	A,H
	OR	L
	JP	NZ,$?4
	LD	HL,0
	JP	$?5
$?4:
	LD	HL,1
$?5:
	LD	A,H
	OR	L
	JP	Z,$?3
	LD	HL,0
	POP	BC
	RET
$?3:
	LD	HL,(__TOP)
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,0
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,(__TOP)
	PUSH	HL
	CALL	_FREE
	POP	BC
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	LD	(__TOP),HL
	LD	HL,1
	POP	BC
	RET
	POP	BC
_MALLOC:
	DEBUG	'malloc'
	LD	HL,-12
	ADD	HL,SP
	LD	SP,HL
	LD	HL,14
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	NZ,$?7
	LD	HL,14
	ADD	HL,SP
	PUSH	HL
	LD	HL,2
	POP	DE
	CALL	CCPINT
$?7:
	LD	HL,0
	ADD	HL,SP
	PUSH	HL
	LD	HL,0
	POP	DE
	CALL	CCPINT
$?10:
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	POP	DE
	CALL	CCLT
	LD	A,H
	OR	L
	JP	Z,$?9
	JP	$?11
$?8:
	LD	HL,0
	ADD	HL,SP
	LD	D,H
	LD	E,L
	CALL	CCGINT
	INC	HL
	CALL	CCPINT
	DEC	HL
	JP	$?10
$?11:
	LD	HL,2
	ADD	HL,SP
	PUSH	HL
	LD	HL,16
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	PUSH	HL
	CALL	_ALIGN
	POP	BC
	POP	BC
	LD	DE,2
	ADD	HL,DE
	POP	DE
	CALL	CCPINT
	PUSH	HL
	LD	HL,4
	POP	DE
	CALL	CCLT
	LD	A,H
	OR	L
	JP	Z,$?12
	LD	HL,0
	EX	DE,HL
	LD	HL,12
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
$?12:
	LD	HL,(__BOTTOM)
	LD	A,H
	OR	L
	JP	NZ,$?13
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	LD	HL,4
	PUSH	HL
	CALL	_SBRK
	POP	BC
	POP	DE
	CALL	CCPINT
	PUSH	HL
	LD	HL,-1
	POP	DE
	CALL	CCEQ
	LD	A,H
	OR	L
	JP	Z,$?14
	LD	HL,0
	EX	DE,HL
	LD	HL,12
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
$?14:
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	PUSH	HL
	CALL	_ALIGN
	POP	BC
	POP	BC
	POP	DE
	CALL	CCPINT
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	CALL	CCGINT
	LD	DE,2
	ADD	HL,DE
	POP	DE
	CALL	CCPINT
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	LD	(__BOTTOM),HL
	LD	(__TOP),HL
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,0
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
$?13:
	LD	HL,10
	ADD	HL,SP
	PUSH	HL
	LD	HL,0
	POP	DE
	CALL	CCPINT
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	LD	HL,(__EMPTY)
	POP	DE
	CALL	CCPINT
$?17:
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?16
	JP	$?18
$?15:
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	POP	DE
	CALL	CCPINT
	JP	$?17
$?18:
	LD	HL,6
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	POP	DE
	CALL	CCPINT
	LD	HL,4
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	ADD	HL,DE
	POP	DE
	CALL	CCPINT
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCUGT
	LD	A,H
	OR	L
	JP	NZ,$?20
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCULE
	LD	A,H
	OR	L
	JP	NZ,$?20
	LD	HL,0
	JP	$?21
$?20:
	LD	HL,1
$?21:
	LD	A,H
	OR	L
	JP	Z,$?19
	LD	HL,10
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
	JP	$?15
$?19:
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	LD	DE,2
	ADD	HL,DE
	PUSH	HL
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCULT
	LD	A,H
	OR	L
	JP	Z,$?22
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
$?22:
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?23
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
	JP	$?24
$?23:
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	LD	(__EMPTY),HL
$?24:
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	EX	DE,HL
	LD	HL,12
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
	JP	$?15
$?16:
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_GROW
	POP	BC
	LD	A,H
	OR	L
	JP	NZ,$?25
	JP	$?9
$?25:
	JP	$?8
$?9:
	LD	HL,0
	EX	DE,HL
	LD	HL,12
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
	LD	HL,12
	ADD	HL,SP
	LD	SP,HL
_REALLOC:
	DEBUG	'realloc'
	LD	HL,-14
	ADD	HL,SP
	LD	SP,HL
	LD	HL,0
	ADD	HL,SP
	PUSH	HL
	LD	HL,20
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
	LD	HL,16
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,-4
	POP	DE
	CALL	CCGT
	LD	A,H
	OR	L
	JP	Z,$?27
	LD	HL,0
	EX	DE,HL
	LD	HL,14
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
$?27:
	LD	HL,4
	ADD	HL,SP
	PUSH	HL
	LD	HL,18
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	PUSH	HL
	CALL	_ALIGN
	POP	BC
	POP	BC
	LD	DE,2
	ADD	HL,DE
	POP	DE
	CALL	CCPINT
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	POP	DE
	CALL	CCPINT
	LD	HL,2
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCSUB
	POP	DE
	CALL	CCPINT
	LD	HL,12
	ADD	HL,SP
	PUSH	HL
	LD	HL,0
	POP	DE
	CALL	CCPINT
	LD	HL,10
	ADD	HL,SP
	PUSH	HL
	LD	HL,(__EMPTY)
	POP	DE
	CALL	CCPINT
$?30:
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?29
	JP	$?31
$?28:
	LD	HL,10
	ADD	HL,SP
	PUSH	HL
	LD	HL,12
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	POP	DE
	CALL	CCPINT
	JP	$?30
$?31:
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCUGT
	LD	A,H
	OR	L
	JP	Z,$?32
	JP	$?29
$?32:
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCEQ
	LD	A,H
	OR	L
	JP	Z,$?33
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,12
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,12
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?34
	LD	HL,12
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,12
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
	JP	$?35
$?34:
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	LD	(__EMPTY),HL
$?35:
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	POP	DE
	CALL	CCPINT
	JP	$?29
$?33:
	LD	HL,12
	ADD	HL,SP
	PUSH	HL
	LD	HL,12
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
	JP	$?28
$?29:
	LD	HL,6
	ADD	HL,SP
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	ADD	HL,DE
	POP	DE
	CALL	CCPINT
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCULE
	LD	A,H
	OR	L
	JP	Z,$?37
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCUGE
	LD	A,H
	OR	L
	JP	Z,$?37
	LD	HL,1
	JP	$?38
$?37:
	LD	HL,0
$?38:
	LD	A,H
	OR	L
	JP	Z,$?36
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	LD	DE,2
	ADD	HL,DE
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCULT
	LD	A,H
	OR	L
	JP	Z,$?39
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,8
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_FREE
	POP	BC
$?39:
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	EX	DE,HL
	LD	HL,14
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
$?36:
	LD	HL,6
	ADD	HL,SP
	PUSH	HL
	LD	HL,18
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_MALLOC
	POP	BC
	POP	DE
	CALL	CCPINT
	LD	A,H
	OR	L
	JP	NZ,$?40
	LD	HL,0
	EX	DE,HL
	LD	HL,14
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
$?40:
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_MEMCPY
	POP	BC
	POP	BC
	POP	BC
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_FREE
	POP	BC
	LD	HL,6
	ADD	HL,SP
	CALL	CCGINT
	EX	DE,HL
	LD	HL,14
	ADD	HL,SP
	LD	SP,HL
	EX	DE,HL
	RET
	LD	HL,14
	ADD	HL,SP
	LD	SP,HL
_CALLOC:
	DEBUG	'calloc'
	PUSH	BC
	PUSH	BC
	LD	HL,8
	ADD	HL,SP
	PUSH	HL
	CALL	CCGINT
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCMULT
	POP	DE
	CALL	CCPINT
	LD	HL,0
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_MALLOC
	POP	BC
	POP	DE
	CALL	CCPINT
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	NZ,$?42
	LD	HL,0
	POP	BC
	POP	BC
	RET
$?42:
	LD	HL,2
	ADD	HL,SP
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
$?45:
	LD	HL,8
	ADD	HL,SP
	LD	D,H
	LD	E,L
	CALL	CCGINT
	DEC	HL
	CALL	CCPINT
	INC	HL
	LD	A,H
	OR	L
	JP	Z,$?44
	JP	$?46
$?43:
	JP	$?45
$?46:
	LD	HL,2
	ADD	HL,SP
	LD	D,H
	LD	E,L
	CALL	CCGINT
	INC	HL
	CALL	CCPINT
	DEC	HL
	PUSH	HL
	LD	HL,0
	POP	DE
	LD	A,L
	LD	(DE),A
	JP	$?43
$?44:
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	POP	BC
	POP	BC
	RET
	POP	BC
	POP	BC
_FREE:
	DEBUG	'free'
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	HL,0
	ADD	HL,SP
	PUSH	HL
	LD	HL,10
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
	LD	HL,4
	ADD	HL,SP
	PUSH	HL
	LD	HL,0
	POP	DE
	CALL	CCPINT
	LD	HL,2
	ADD	HL,SP
	PUSH	HL
	LD	HL,(__EMPTY)
	POP	DE
	CALL	CCPINT
$?50:
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?49
	JP	$?51
$?48:
	LD	HL,2
	ADD	HL,SP
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	POP	DE
	CALL	CCPINT
	JP	$?50
$?51:
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCULT
	LD	A,H
	OR	L
	JP	Z,$?52
	JP	$?49
$?52:
	LD	HL,4
	ADD	HL,SP
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
	JP	$?48
$?49:
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?53
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
	JP	$?54
$?53:
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	LD	(__EMPTY),HL
$?54:
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?55
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCEQ
	LD	A,H
	OR	L
	JP	Z,$?56
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,0
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
$?56:
$?55:
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	LD	A,H
	OR	L
	JP	Z,$?57
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCEQ
	LD	A,H
	OR	L
	JP	Z,$?58
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTSLOT
	POP	BC
	PUSH	HL
	CALL	_SNEXTSLO
	POP	BC
	POP	BC
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	CALL	_NEXTFREE
	POP	BC
	PUSH	HL
	CALL	_SNEXTFRE
	POP	BC
	POP	BC
$?58:
$?57:
	POP	BC
	POP	BC
	POP	BC
	RET
_ALIGN:
	DEBUG	'align'
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,1
	POP	DE
	CALL	CCSUB
	POP	DE
	ADD	HL,DE
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,1
	POP	DE
	CALL	CCSUB
	CALL	CCCOM
	POP	DE
	CALL	CCAND
	RET
_NEXTSLOT:
	DEBUG	'nextslot'
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	POP	DE
	CALL	CCSUB
	CALL	CCGINT
	RET
_NEXTFREE:
	DEBUG	'nextfree'
	LD	HL,2
	ADD	HL,SP
	CALL	CCGINT
	CALL	CCGINT
	RET
_SNEXTSLO:
	DEBUG	'snextslo'
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	POP	DE
	CALL	CCSUB
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
	RET
_SNEXTFRE:
	DEBUG	'snextfre'
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	PUSH	HL
	LD	HL,4
	ADD	HL,SP
	CALL	CCGINT
	POP	DE
	CALL	CCPINT
	RET
	END
